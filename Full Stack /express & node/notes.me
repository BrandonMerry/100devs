const http = require('http') 

1.application imports Node's built-in web server module

-----------------------------------------------------------------
const app = http.createServer((request, response) => {
  response.writeHead(200, { 'Content-Type': 'text/plain' })
  response.end('Hello World')
})

1.uses the createServer method of the http module to create a new web server.

2.An event handler is registered to the server that is called every time an HTTP request is made to the server's address http://localhost:3001.

3.The request is responded to with the status code 200, with the Content-Type header set to text/plain, and the content of the site to be returned set to Hello World.

--------------------------------------------------
const PORT = 3001
app.listen(PORT)
console.log(`Server running on port ${PORT}`)

1. Binds the http server assigned to the app variable, to listen to HTTP requests sent to the port 3001:

-----------------------------------

What does the caret in front of the version number in package.json "express": "^4.17.2" mean? 

1.versioning model used in npm is called semantic versioning.

2.The caret in the front of ^4.17.2 means that if and when the dependencies of a project are updated, the version of express that is installed will be at least 4.17.2


-----------------------------------
We can update the dependencies of the project with the command:

1. npm update


-----------------------------------

Likewise, if we start working on the project on another computer, we can install all up-to-date dependencies of the project defined in package.json with the command:

1. npm install

-----------------------------------
The event handler function accepts two parameters. 
1. contains all of the information of the HTTP request
2. is used to define how the request is responded to.

-----------------------------------

app.get('/', (request, response) => {
  response.send('<h1>Hello World!</h1>')
})

an event handler that is used to handle HTTP GET requests made to the application's / root

-----------------------------------
app.get('/api/notes', (request, response) => {
  response.json(notes)
})

an event handler that handles HTTP GET requests made to the notes path of the application:

-----------------------------------
REST api code 

 www.example.com/api/notes.


URL	        verb	    functionality
notes/10	GET	    fetches a single resource
notes	    GET	    fetches all resources in the collection
notes	    POST	creates a new resource based on the request data
notes/10	DELETE	removes the identified resource
notes/10	PUT	    replaces the entire identified resource with the request data
notes/10	PATCH	replaces a part of the identified resource with the request data
